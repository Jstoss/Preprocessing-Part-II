// Mixins below variables

.border-radius (@radius: 5px) {
	-webkit-border-radius: @radius;
	-moz-border-radius:    @radius;
	border-radius:         @radius;

	-moz-background-clip:    padding;
	-webkit-background-clip: padding-box;
	background-clip:         padding-box;
}

.opacity (@opacity: 0.5) {
	-webkit-opacity: 	@opacity;
	-moz-opacity: 		@opacity;
	opacity: 		@opacity;
}

.box-shadow (@string) {
	-webkit-box-shadow: @string;
	-moz-box-shadow:    @string;
	box-shadow:         @string;
}

.rotate (@deg) {
	-webkit-transform: rotate(@deg);
	-moz-transform: 	 rotate(@deg);
	-ms-transform: 		 rotate(@deg);
	-o-transform: 		 rotate(@deg);
}

.skew (@deg, @deg2) {
	-webkit-transform:       skew(@deg, @deg2);
	-moz-transform: 	 skew(@deg, @deg2);
	-ms-transform: 		 skew(@deg, @deg2);
	-o-transform: 		 skew(@deg, @deg2);
}

//.button-mixer(100px, 50px, teal) || .button-mixer(100px, 50px, teal, @b-color: red, @b-radius: 50%)
//first three are mandatory and in that order, rest can be any order after initial 3, but if out of order must
//include the @variable: value syntax
#my-stuff{
	.btn-mixer(@width, @height, @bg-color, @b-width: 1px, @b-line: solid, @b-color: black, @b-radius: 10px) {
		margin-top: 20px;
		width: @width;
		height: @height;
		background-color: @bg-color;
		border: @b-width @b-line @b-color;
		.border-radius(@b-radius);
	}
}

//animation mixins
.mixi-rot() {
	0% {
		.rotate(0deg);
		.opacity(0);
	}
	50% {
		.rotate(180deg);
		.opacity(1);
	}
	100% {
		.rotate(360deg);
		.opacity(0);
	}
}
